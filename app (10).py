# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Le4sR930TLn2PK2pfg-hzcFCiv0AmUHy
"""

#title
import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression

#load the car dataset
df=pd.read_csv("car_dataset.csv")
df['class'] = df['class'].map({0: 'unacc', 1: 'acc', 2: 'good', 3: 'vgood'})

# Train a Logistic Regression model (softmax)
x = df[car.feature_names]
y = df['class']
model = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=200)
model.fit(x, y)

# Streamlit app
st.title('Car Evaluation')
st.write("Predict the evaluation of cars based on its features")

# User inputs
buying = st.selectbox('buying', df['buying'].unique())
maint = st.selectbox('maint', df['maint'].unique())
doors = st.selectbox('doors', df['doors'].unique())
persons = st.selectbox('persons', df['persons'].unique())
lug_boot = st.selectbox('lug_boot', df['lug_boot'].unique())
safety = st.selectbox('safety', df['safety'].unique())

# Predict class
features = np.array([[buying, maint, doors, persons, lug_boot, safety]])
# Convert features to numerical values using the mapping used during training
features = pd.DataFrame(features, columns=car.feature_names)
for col in features.columns:
    features[col] = features[col].map(dict(zip(df[col].unique(), range(len(df[col].unique())))))

prediction = model.predict(features)[0]
prediction_prob = model.predict_proba(features)

st.write(f"### Predicted class: **{prediction.capitalize()}**")
st.write(f"### Prediction Probability: ")
st.write(f"unacc: {prediction_prob[0][0]:.2f}, acc: {prediction_prob[0][1]:.2f}, good: {prediction_prob[0][2]:.2f}, vgood: {prediction_prob[0][3]:.2f}")

st.write("### About the App:")
st.write("This app uses Multinomial Logistic Regression (Softmax) trained on the car dataset to classify evaluation into four classes: unacc, acc, good, vgood.")

st.write("Made by Ruchita ðŸ˜€")

