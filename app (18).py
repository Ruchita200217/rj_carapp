# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Le4sR930TLn2PK2pfg-hzcFCiv0AmUHy
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

#load the car dataset
df=pd.read_csv("car_dataset.csv")
columns = ['buying', 'maint', 'doors', 'persons', 'lug_boot', 'safety', 'class']
df['class'] = df['class'].map({0: 'unacc', 1: 'acc', 2: 'good', 3: 'vgood'})

# Train a Logistic Regression model (softmax)
x = df.drop('class', axis=1)
y = df['class']
model = LogisticRegression(multi_class='multinomial', solver='lbfgs', max_iter=200)
model.fit(x, y)

# Streamlit app
st.title('Car Evaluation classifier')
st.write("Predict the car condition using Machine Learning based on various features.")

# Define the mapping dictionary for user inputs
mapping = {
    'buying': {'vhigh': 3, 'high': 2, 'med': 1, 'low': 0},
    'maint': {'vhigh': 3, 'high': 2, 'med': 1, 'low': 0},
    'doors': {'2': 0, '3': 1, '4': 2, '5more': 3},
    'persons': {'2': 0, '4': 1, 'more': 2},
    'lug_boot': {'small': 0, 'med': 1, 'big': 2},
    'safety': {'low': 0, 'med': 1, 'high': 2}
}
# User inputs
buying = st.selectbox('buying', list(mapping['buying'].keys()))  # Use keys from mapping
maint = st.selectbox('maint', list(mapping['maint'].keys()))  # Use keys from mapping
doors = st.selectbox('doors', list(mapping['doors'].keys()))  # Use keys from mapping
persons = st.selectbox('persons', list(mapping['persons'].keys()))  # Use keys from mapping
lug_boot = st.selectbox('lug_boot', list(mapping['lug_boot'].keys()))  # Use keys from mapping
safety = st.selectbox('safety', list(mapping['safety'].keys()))  # Use keys from mapping

# Predict class
features = [mapping['buying'][buying],
            mapping['maint'][maint],
            mapping['doors'][doors],
            mapping['persons'][persons],
            mapping['lug_boot'][lug_boot],
            mapping['safety'][safety]]
features = np.array([features])  # Convert to a NumPy array
prediction = model.predict(features)[0]
prediction_prob = model.predict_proba(features)
st.write(f"### Predicted class: **{prediction.capitalize()}**")
st.write(f"### Prediction Probability: ")
st.write(f"unacc: {prediction_prob[0][0]:.2f}, acc: {prediction_prob[0][1]:.2f}, good: {prediction_prob[0][2]:.2f}, vgood: {prediction_prob[0][3]:.2f}")
st.write("### About the App:")
st.write("This app uses Multinomial Logistic Regression (Softmax) trained on the car dataset to classify evaluation into four classes: unacc, acc, good, vgood.")
st.write("Made by Ruchita ðŸ˜€")